% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/utils.R
\name{calculate_normalized_value}
\alias{calculate_normalized_value}
\title{Calculate Normalized Value for a Clustering Validation Index}
\usage{
calculate_normalized_value(raw_value, metric_name, normalization_params)
}
\arguments{
\item{raw_value}{A numeric value representing the raw validation index score.
Can be \code{NA}.}

\item{metric_name}{A character string specifying the name of the validation
index (e.g., "silhouette", "ch", "db", "dunn").}

\item{normalization_params}{A list containing normalization parameters as
returned by \code{\link{perform_global_normalization}}.}
}
\value{
A numeric value between 0 and 1 representing the normalized score.
Returns 0 for \code{NA} input values or when normalization parameters
are unavailable.
}
\description{
This function applies the appropriate normalization transformation to a raw
validation index value based on pre-computed normalization parameters.
}
\details{
The normalization is applied according to the method specified in the
normalization parameters:
\itemize{
\item \strong{minmax_shifted}: \code{(raw_value + 1) / 2} for Silhouette
\item \strong{sum_based}: \code{raw_value / sum_val} for CH and Dunn
\item \strong{inverse_sum}: \code{(1 / raw_value) / sum_val} for DB
}

All normalized values are scaled to (0, 1) where higher values indicate
better clustering performance.
}
\examples{
# First create normalization parameters
raw_values <- list(
  silhouette = c(0.7, 0.5, 0.8),
  ch = c(120.5, 95.2, 150.3),
  db = c(0.8, 1.2, 0.6),
  dunn = c(0.25, 0.18, 0.32)
)
norm_params <- perform_global_normalization(raw_values)

# Normalize individual values
norm_sil <- calculate_normalized_value(0.7, "silhouette", norm_params)
norm_ch <- calculate_normalized_value(120.5, "ch", norm_params)
norm_db <- calculate_normalized_value(0.8, "db", norm_params)
norm_dunn <- calculate_normalized_value(0.25, "dunn", norm_params)

# View results
cat("Normalized values:\n")
cat("Silhouette:", norm_sil, "\n")
cat("CH:", norm_ch, "\n") 
cat("DB:", norm_db, "\n")
cat("Dunn:", norm_dunn, "\n")

# Handle NA values
norm_na <- calculate_normalized_value(NA, "silhouette", norm_params)
cat("NA value result:", norm_na, "\n")

}
\seealso{
\code{\link{perform_global_normalization}}
}
\keyword{internal}
